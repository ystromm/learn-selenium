buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
    }
    repositories {
        jcenter()
    }
}

plugins {
    id "com.moowork.node" version "1.0.1"
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

mainClassName = 'com.github.ystromm.learn_selenium.webapp_elm.WebappMain'

repositories {
    jcenter()
}

node {
    download = true
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.16.10'
    compile 'com.google.guava:guava:19.0'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.webjars:webjars-locator'
    runtime 'org.webjars:bootstrap:3.3.7-1'
    testCompileOnly 'org.projectlombok:lombok:1.16.10'
    testCompile project(':backend-impl')
    testCompile 'org.seleniumhq.selenium:selenium-java:3.0.1'
    testCompile 'org.fluentlenium:fluentlenium-junit:3.0.4'
    testCompile 'org.awaitility:awaitility:2.0.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.boot:spring-boot-starter-mustache'
}

task npmInstallElm(type: NpmTask) {

    // install the express package only
    args = ['install', 'elm']
}


task elmMake(type:Exec) {
    dependsOn npmInstallElm
    inputs.files file("src/main/elm/App.elm"), file("elm-stuff")
    outputs.file file("build/resources/main/static/js/App.js")

    commandLine "elm", "make", "--yes", "--output", "build/resources/main/static/js/App.js", "src/main/elm/App.elm"
}

assemble {
    dependsOn elmMake
}

test {
    systemProperty 'testReportDir', project.testReportDir
}
